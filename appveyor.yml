environment:
  matrix:
  - SQL_INSTANCE_NAME: SQL2008R2SP2
  - SQL_INSTANCE_NAME: SQL2012SP1
  - SQL_INSTANCE_NAME: SQL2014
  - SQL_INSTANCE_NAME: SQL2016

test_script:
- ps: $ErrorActionPreference = "Stop"

- 'echo Starting SQL Server instance: %SQL_INSTANCE_NAME%'
- ps: Start-Service "MSSQL`$$env:SQL_INSTANCE_NAME"

- echo Testing connectivity with named instance over named pipes
- ps: $env:connection_string_with_instance = "Server=(local)\$env:SQL_INSTANCE_NAME;Database=master;User ID=sa;Password=Password12!"
- ps: |
      $conn = New-Object System.Data.SqlClient.SqlConnection
      $conn.ConnectionString = $env:connection_string_with_instance
      $conn.Open()
      $cmd = New-Object System.Data.SqlClient.SqlCommand("SELECT * FROM information_schema.tables", $conn)
      $reader = $cmd.ExecuteReader()
      while($reader.Read())
      {
        Write-Host "Table: $($reader["table_name"])"
      }
      $conn.Close()

- echo Testing connectivity with localhost (TCP/IP 1433)
- ps: $env:connection_string_localhost = "Server=localhost;Database=master;User ID=sa;Password=Password12!"
- ps: |
      $conn = New-Object System.Data.SqlClient.SqlConnection
      $conn.ConnectionString = $env:connection_string_localhost
      $conn.Open()
      $cmd = New-Object System.Data.SqlClient.SqlCommand("SELECT * FROM information_schema.tables", $conn)
      $reader = $cmd.ExecuteReader()
      while($reader.Read())
      {
        Write-Host "Table: $($reader["table_name"])"
      }
      $conn.Close()

build: off
